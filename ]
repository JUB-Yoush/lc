import bintree

# https://leetcode.com/problems/validate-binary-search-tree/
"""
recursive tree checking
recurse to leaf, leaf is bst
go up to parent, verify kids are bst + parent is in between kids in value
go left until no more left
go up one and check if left < curr
check if curr < right and right is bst
"""


class Solution:
    def isValidBST(self, root) -> bool:
        def dfs(curr):
            if curr.right is None and curr.left is None:
                return True
            if curr.left is not None:
                return dfs(curr.left)

        return False


tree = bintree.make_tree([2, 1, 3])
sol = Solution()
print(sol.isValidBST(tree[0]))
